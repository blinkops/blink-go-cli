package normalizer

import (
	"fmt"

	"github.com/blinkops/blink-go-cli/pkg/utils"
	"github.com/spf13/cobra"
	"github.com/spf13/viper"
)

// Separate between global and command flags..

const (
	apiKeyFlagName      = "api-key"
	wsNameFlagName      = "workspace"
	wsIDAutoGenFlagName = "ws_id"
	wsIDCobraKey        = "workspace-id"
	apiKeyCobraKey      = "blink-api-key"
)

// NormalizeFlags formats the cobra flags according to the
func NormalizeFlags(root *cobra.Command) {

	// disable this stuff
	for _, flag := range []string{"BLINK-API-KEY", "scheme"} {
		flag := root.PersistentFlags().Lookup(flag)
		if flag != nil {
			flag.Hidden = true
		}
	}

	root.PersistentFlags().String(apiKeyFlagName, "", "")

	root.PersistentPreRunE = bindFlags

	for _, val := range root.Commands() {
		for _, subCmds := range val.Commands() {
			ws := subCmds.PersistentFlags().Lookup(wsIDAutoGenFlagName)
			if ws != nil {
				//subCmds.PersistentFlags().String(apiKeyFlagName, "", "")
				subCmds.PersistentFlags().String(wsNameFlagName, "", "")
				// bindWorkspace needs to run after the global flags are parsed
				// but before the command is run
				//subCmds.PersistentPreRunE = bindWorkspace
				ws.Changed = true
				ws.Hidden = true
			}
		}
	}
}

func bindFlags(cmd *cobra.Command, args []string) (err error) {

	// look for these provided values
	workspaceName := cmd.PersistentFlags().Lookup(wsNameFlagName)
	//apiKey := cmd.PersistentFlags().Lookup(apiKeyFlagName)
	apiKey := cmd.Root().PersistentFlags().Lookup(apiKeyFlagName)
	apiKeyStr := ""

	if apiKey != nil && apiKey.Value.String() != "" {
		apiKeyStr = apiKey.Value.String()
		// set this so later it can be read from the autogenerated cli
		viper.Set("BLINK-API-KEY", apiKeyStr)
	} else {
		apiKeyStr = viper.GetString(apiKeyCobraKey)
	}

	// Take care of resolving workspace
	var workspaceID string
	//  get the workspace name from flag and resolve into id
	if workspaceName != nil && workspaceName.Value.String() != "" {
		workspaceID, err = utils.GetWorkspaceID(workspaceName.Value.String(), apiKeyStr)
		if err != nil {
			return fmt.Errorf("--api-key error obtaining workspace-id: %s", err)
		}
	} else {
		workspaceID = viper.GetString(wsIDCobraKey)
	}
	ws := cmd.PersistentFlags().Lookup(wsIDAutoGenFlagName)
	if ws != nil {
		ws.Value.Set(workspaceID)
	}

	return nil

}
